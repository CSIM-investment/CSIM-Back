name: Deploy to Production

on:
  push:
    branches:
      - feature/CD

jobs:
  deployment:
    environment: CSIM-Back
    runs-on: ubuntu-latest
    steps:

      - name: Install OpenVPN
        run: sudo apt-get update && sudo apt-get install -y openvpn
      
      - name: install dnsutils
        run: sudo apt-get install net-tools
      
      - name: install traceroute
        run: sudo apt-get install traceroute
      
      - name: install gawk
        run: sudo apt-get install gawk

      - name: Copy OpenVPN configuration file to server
        run: wget https://ydayslyon.fr/assets/YnovVPN.ovpn

      - name: Prepare auth user pass
        run: |
          echo "${{ secrets.OPENVPN_USERNAME }}
          ${{ secrets.OPENVPN_PASSWORD }}" > authPass.txt
        
      - name: first ifconfig
        run: ifconfig -a

      - name: connect to VPN
        run: sudo openvpn --config ./YnovVPN.ovpn --auth-user-pass authPass.txt --log "vpn.log" --daemon
      
      - name: sleep 5
        run: sleep 5
      
      - name: cat vpnlog
        run: sudo cat vpn.log
        
      - name: second ifconfig
        run: ifconfig -a

      - name: remove auth user pass
        run: rm authPass.txt

      - name: create certificate
        run: echo "${{ secrets.SSH_PRIVATE_KEY }}" >> ./deploy_key_rsa

      - name: Install ssh
        run: |
          sudo apt-get -yqq install openssh-client
  
      - name: routing
        run: |
          sudo iptables -A INPUT -p icmp --icmp-type 8 -s 10.1.1.16 -j ACCEPT
          sudo route add default tun0
          tun0_ip=$(ifconfig tun0 | awk '/inet /{print $2}')
          sudo route add default gw $tun0_ip
          sudo iptables -A OUTPUT -o tun0 -j ACCEPT
          sudo iptables -A OUTPUT -o eth0 -j DROP

      - name: print private_ssh_key
        run: |
          mkdir ~/.ssh/
          sudo echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key_rsa
      
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@master 
        with: 
          host: ${{ secrets.SSH_HOST }} 
          username: ${{ secrets.SSH_USERNAME }} 
          password: ${{ secrets.SSH_PASSWORD }} 
          port: ${{ secrets.PORT }} 
          script: ./deploy 
      
      - name: print private_ssh_key
        run: |
          echo $(ifconfig tun0 | awk '/inet /{print $2}')
          
      - name: Connect to ssh 1
        run: ssh -o StrictHostKeyChecking=no -i ~/.ssh/deploy_key_rsa -t ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}

      - name: Connect to ssh 2
        run: ssh -o BindAddress=$(ifconfig tun0 | awk '/inet /{print $2}') -o StrictHostKeyChecking=no -i ~/.ssh/deploy_key_rsa -t ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}
